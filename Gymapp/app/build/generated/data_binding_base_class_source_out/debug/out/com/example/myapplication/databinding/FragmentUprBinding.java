// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUprBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonrzm;

  @NonNull
  public final EditText editrzmR;

  @NonNull
  public final EditText editrzmW;

  @NonNull
  public final TextView rzmAnswer;

  @NonNull
  public final TextView textRepeatsRzm;

  @NonNull
  public final TextView textToRzm;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textWeightRzm;

  private FragmentUprBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonrzm,
      @NonNull EditText editrzmR, @NonNull EditText editrzmW, @NonNull TextView rzmAnswer,
      @NonNull TextView textRepeatsRzm, @NonNull TextView textToRzm, @NonNull TextView textView6,
      @NonNull TextView textWeightRzm) {
    this.rootView = rootView;
    this.buttonrzm = buttonrzm;
    this.editrzmR = editrzmR;
    this.editrzmW = editrzmW;
    this.rzmAnswer = rzmAnswer;
    this.textRepeatsRzm = textRepeatsRzm;
    this.textToRzm = textToRzm;
    this.textView6 = textView6;
    this.textWeightRzm = textWeightRzm;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUprBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUprBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_upr, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUprBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonrzm;
      Button buttonrzm = ViewBindings.findChildViewById(rootView, id);
      if (buttonrzm == null) {
        break missingId;
      }

      id = R.id.editrzm_r;
      EditText editrzmR = ViewBindings.findChildViewById(rootView, id);
      if (editrzmR == null) {
        break missingId;
      }

      id = R.id.editrzm_w;
      EditText editrzmW = ViewBindings.findChildViewById(rootView, id);
      if (editrzmW == null) {
        break missingId;
      }

      id = R.id.rzm_answer;
      TextView rzmAnswer = ViewBindings.findChildViewById(rootView, id);
      if (rzmAnswer == null) {
        break missingId;
      }

      id = R.id.text_repeats_rzm;
      TextView textRepeatsRzm = ViewBindings.findChildViewById(rootView, id);
      if (textRepeatsRzm == null) {
        break missingId;
      }

      id = R.id.text_to_rzm;
      TextView textToRzm = ViewBindings.findChildViewById(rootView, id);
      if (textToRzm == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.text_weight_rzm;
      TextView textWeightRzm = ViewBindings.findChildViewById(rootView, id);
      if (textWeightRzm == null) {
        break missingId;
      }

      return new FragmentUprBinding((ConstraintLayout) rootView, buttonrzm, editrzmR, editrzmW,
          rzmAnswer, textRepeatsRzm, textToRzm, textView6, textWeightRzm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
