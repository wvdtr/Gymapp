// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText caloriesInput;

  @NonNull
  public final EditText carbsInput;

  @NonNull
  public final EditText fatInput;

  @NonNull
  public final EditText productNameInput;

  @NonNull
  public final EditText proteinInput;

  private DialogAddProductBinding(@NonNull LinearLayout rootView, @NonNull EditText caloriesInput,
      @NonNull EditText carbsInput, @NonNull EditText fatInput, @NonNull EditText productNameInput,
      @NonNull EditText proteinInput) {
    this.rootView = rootView;
    this.caloriesInput = caloriesInput;
    this.carbsInput = carbsInput;
    this.fatInput = fatInput;
    this.productNameInput = productNameInput;
    this.proteinInput = proteinInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.caloriesInput;
      EditText caloriesInput = ViewBindings.findChildViewById(rootView, id);
      if (caloriesInput == null) {
        break missingId;
      }

      id = R.id.carbsInput;
      EditText carbsInput = ViewBindings.findChildViewById(rootView, id);
      if (carbsInput == null) {
        break missingId;
      }

      id = R.id.fatInput;
      EditText fatInput = ViewBindings.findChildViewById(rootView, id);
      if (fatInput == null) {
        break missingId;
      }

      id = R.id.productNameInput;
      EditText productNameInput = ViewBindings.findChildViewById(rootView, id);
      if (productNameInput == null) {
        break missingId;
      }

      id = R.id.proteinInput;
      EditText proteinInput = ViewBindings.findChildViewById(rootView, id);
      if (proteinInput == null) {
        break missingId;
      }

      return new DialogAddProductBinding((LinearLayout) rootView, caloriesInput, carbsInput,
          fatInput, productNameInput, proteinInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
